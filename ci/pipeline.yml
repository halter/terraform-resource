jobs:
  - name: auto-bump-terraform
    plan:
      - in_parallel:
        - get: terraform-github-release
          trigger: true
        - get: resource-src
      - task: bump-terraform-cli
        file: resource-src/ci/tasks/bump-terraform-cli.yml
      - task: git-commit
        file: resource-src/ci/tasks/git-commit.yml
        input_mapping: {input-src: updated-resource-src}
        output_mapping: {output-src: committed-resource-src}
        params:
          GIT_ADD_ARGS: ./config/terraform-version
          GIT_COMMIT_MSG: ":airplane: Auto-commit: Bumping Terraform CLI version"
          GIT_COMMIT_USERNAME: friendly-ci
          GIT_COMMIT_EMAIL: "webops@halter.co.nz"
          GIT_SUCCEED_ON_NO_CHANGES: true
      - put: resource-src
        params:
          repository: committed-resource-src/
          rebase: true

  - name: push-image
    serial_groups: [track1, track2, track3, track4, track5]
    plan:
      - in_parallel:
        - get: tasks
          params: {unpack: true}
        - get: resource-src
          trigger: true
      - task: setup-version
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: alpine
              tag: latest
          inputs:
            - name: resource-src
          outputs:
            - name: version
          run:
            path: sh
            args:
            - -c
            - |
              #!/bin/sh
              cp resource-src/config/terraform-version version/version
      - in_parallel:
        - task: build-artifacts
          file: resource-src/ci/tasks/build-prod-artifacts.yml
        - task: create-architecture-tags
          file: tasks/oci/tasks/architecture-tags.yml
      - in_parallel:
        - task: build-amd64-image
          privileged: true
          file: tasks/oci/tasks/build-v2.yml
          params:
            IMAGE_PLATFORM: linux/amd64
            DOCKERFILE: Dockerfile
          input_mapping:
            context: build-artifacts
          output_mapping:
            image: amd64_image
        - task: build-arm64-image
          privileged: true
          file: tasks/oci/tasks/build-v2.yml
          params:
            IMAGE_PLATFORM: linux/arm64
            DOCKERFILE: Dockerfile
          input_mapping:
            context: build-artifacts
          output_mapping:
            image: arm64_image
      - in_parallel:
        - put: terraform-resource-image
          inputs:
            - arm64_image
            - tags
          params:
            image: arm64_image/image.tar
            additional_tags: tags/arm64
        - put: terraform-resource-image
          inputs:
            - amd64_image
            - tags
          params:
            image: amd64_image/image.tar
            additional_tags: tags/amd64
        # - put: lorawan-stack-version
        #   tags: [office-auckland-1]
        #   inputs:
        #     - lorawan-stack-version
        #   params:
        #     file: lorawan-stack-version/version
      - task: create-multiarch-manifest
        file: tasks/oci/tasks/create-multiarch-manifest.yml
        privileged: true
        params:
          REPOSITORY: halternz/terraform-resource
          USERNAME: ((dockerhub-username))
          PASSWORD: ((dockerhub-password))

resources:
- name: tasks
  type: s3
  source:
    region_name: ap-southeast-2
    bucket: halter-artifact-store
    regexp: concourse-tasks/tasks/package-(\d+\.\d+\.\d+).tar.gz
    access_key_id: ((tools-aws-access-key-id))
    secret_access_key: ((tools-aws-secret-access-key))
- name: resource-src
  type: git
  source:
    uri: git@github.com:halter/terraform-resource.git
    branch: master
    private_key: ((ssh-private-key))
- name: terraform-github-release
  type: github-release
  source:
    user: hashicorp
    repository: terraform
    access_token: ((github-token))
- name: terraform-resource-image
  type: registry-image
  source:
    repository: halternz/terraform-resource
    username: ((dockerhub-username))
    password: ((dockerhub-password))
